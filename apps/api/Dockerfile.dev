FROM node:20-alpine

RUN apk update && apk add --no-cache libc6-compat
RUN npm install -g pnpm@10.4.1 turbo@2.1.3

WORKDIR /app

# Copy root manifests and workspace configuration
COPY package.json pnpm-lock.yaml ./
COPY pnpm-workspace.yaml ./ 

# Copy workspace directories (containing their package.json files)
# This ensures pnpm can discover all workspaces and their dependencies.
COPY packages/ ./packages/
COPY apps/ ./apps/

# Install dependencies for the entire monorepo
# pnpm will use pnpm-workspace.yaml to find all packages.
RUN pnpm install --frozen-lockfile

# Copy the rest of the application code
# This layer is separate from dependency installation for better caching.
# If only code changes (not dependencies), pnpm install won't re-run.
COPY . .

# Build the target app and all of its dependencies. Turborepo will
# determine the correct build order (e.g., auth-core -> database -> api).
RUN pnpm --filter @workspace/api... build

# The WORKDIR remains /app (the monorepo root)

EXPOSE 3002

# Start the dev processes for the API and its dependencies (like @workspace/database)
# in parallel. Turborepo will manage the watch modes.
# The "..." syntax in the filter means "and all its dependencies".
CMD ["pnpm", "dev:api"]
